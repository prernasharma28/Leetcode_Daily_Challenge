class Solution {
    public int minSubarray(int[] nums, int p) {
        long total = 0;
        for (int i = 0; i < nums.length; i++) {
            total += nums[i];
        }
        int rem = (int) (total % p);
        if (rem == 0)
            return 0;
        HashMap<Integer, Integer> mp = new HashMap<>();
        mp.put(0, -1);
        long pre = 0;
        int minlength = nums.length;
        for (int i = 0; i < nums.length; i++) {
            pre += nums[i];
            int curr = (int) (pre % p);
            int tar = (curr - rem + p) % p;
            if (mp.containsKey(tar)) {
                minlength = Math.min(minlength, i - mp.get(tar));
            }
            mp.put(curr, i);
        }
        return (minlength == nums.length) ? -1 : minlength;
    }
}
